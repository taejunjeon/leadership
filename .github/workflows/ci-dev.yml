name: Dev CI Pipeline

on:
  push:
    branches: [ develop, 'feat/*', 'fix/*' ]
  pull_request:
    branches: [ develop, main ]

jobs:
  # Gate 1: 보안 검사 (빠른 실패)
  security-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before }}
        head: HEAD
        extra_args: --debug --only-verified

  # Gate 2: 의존성 검증
  dependency-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js (Frontend)
      if: matrix.component == 'frontend'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Check Frontend Dependencies
      if: matrix.component == 'frontend'
      run: |
        cd frontend
        npm ci --package-lock-only
        echo "✅ Frontend 의존성 검증 완료"
    
    - name: Setup Python (Backend)
      if: matrix.component == 'backend'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: backend/requirements*.txt
    
    - name: Check Backend Dependencies
      if: matrix.component == 'backend'
      run: |
        cd backend
        pip install pip-tools
        pip-compile --dry-run requirements.in
        echo "✅ Backend 의존성 검증 완료"

  # Gate 3: 린트 & 포맷
  lint-format:
    runs-on: ubuntu-latest
    needs: [security-check, dependency-check]
    strategy:
      matrix:
        component: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js (Frontend)
      if: matrix.component == 'frontend'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Frontend Lint
      if: matrix.component == 'frontend'
      run: |
        cd frontend
        npm ci
        npm run lint -- --max-warnings=100  # 임시로 경고 허용
    
    - name: Setup Python (Backend)
      if: matrix.component == 'backend'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: backend/requirements*.txt
    
    - name: Backend Lint & Format Check
      if: matrix.component == 'backend'
      run: |
        cd backend
        pip install ruff mypy
        ruff check .
        ruff format --check .
        mypy . || echo "⚠️ Type 검사 경고 (임시 허용)"

  # Gate 4: 유닛 테스트
  unit-test:
    runs-on: ubuntu-latest
    needs: [lint-format]
    strategy:
      matrix:
        component: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js (Frontend)
      if: matrix.component == 'frontend'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Frontend Tests
      if: matrix.component == 'frontend'
      run: |
        cd frontend
        npm ci
        # npm test -- --passWithNoTests  # 테스트 추가 시 활성화
        echo "✅ Frontend 테스트 (TODO)"
    
    - name: Setup Python (Backend)
      if: matrix.component == 'backend'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: backend/requirements*.txt
    
    - name: Backend Tests
      if: matrix.component == 'backend'
      run: |
        cd backend
        pip install -r requirements.txt
        # pytest tests/ -v  # 테스트 추가 시 활성화
        echo "✅ Backend 테스트 (TODO)"

  # 최종 상태 체크
  ci-status:
    runs-on: ubuntu-latest
    needs: [unit-test]
    if: always()
    steps:
    - name: Check CI Status
      run: |
        if [ "${{ needs.unit-test.result }}" == "success" ]; then
          echo "✅ 모든 CI 체크 통과!"
          exit 0
        else
          echo "❌ CI 체크 실패"
          exit 1
        fi